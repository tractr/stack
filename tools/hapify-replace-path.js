const fs = require('fs/promises');
const globby = require('globby');

const GENERATED_FOLDER_PATH = 'src/lib/generated';
const HAPIFYRC_PATH = '.hapifyrc.js';

/**
 * Replace all imports specified in importReplacements in the file content
 *
 * @param {Record<string, string>} importReplacements - List of the imports to replace
 * @param {string} content - File content where the imports should be replaced
 * @returns {string} updated file content
 */
const replaceImportsInString = (importReplacements, content) =>
  Object.entries(importReplacements).reduce(
    (content, [oldImport, newImport]) =>
      content.replace(
        new RegExp(`from '(?:(?:\\.\\.\\/)*${oldImport}).*`, 'g'),
        `from '${newImport}';`,
      ),
    content,
  );

/**
 * Replace imports in all files generated by hapify
 */
const hapifyReplaceImports = async () => {
  // List all paths of the ts files in the generated folder
  const filePaths = await globby(`${GENERATED_FOLDER_PATH}/**/*.ts`);

  // Load the importReplacement rules from hapifyrc
  const { importReplacements } = require(`${process.cwd()}/${HAPIFYRC_PATH}`);

  // For each file, replace the imports
  await Promise.all(
    filePaths.map(async (filePath) => {
      const fileContent = (await fs.readFile(filePath)).toString();
      const updatedFileContent = replaceImportsInString(
        importReplacements,
        fileContent,
      );
      await fs.writeFile(filePath, updatedFileContent);
    }),
  );
};

hapifyReplaceImports();
