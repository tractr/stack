{
  "cli": {
    "defaultCollection": "@nrwl/angular"
  },
  "defaultProject": "pwa",
  "generators": {
    "@nrwl/angular": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      },
      "storybook-configuration": {
        "linter": "eslint"
      }
    },
    "@nrwl/angular:application": {
      "e2eTestRunner": "cypress",
      "linter": "eslint",
      "style": "less",
      "unitTestRunner": "jest"
    },
    "@nrwl/angular:component": {
      "style": "less"
    },
    "@nrwl/angular:library": {
      "linter": "eslint",
      "style": "less",
      "unitTestRunner": "jest"
    }
  },
  "projects": {
    "angular-alerts-features": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/angular/alerts/features",
      "sourceRoot": "libs/angular/alerts/features/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/angular/alerts/features/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/angular/alerts/features/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/angular/alerts/features/ng-package.json"
          },
          "outputs": ["dist/libs/angular/alerts/features"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/angular/alerts/features/src/**/*.ts",
              "libs/angular/alerts/features/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular/alerts/features/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular/alerts/features"]
        }
      }
    },
    "angular-alerts-pages": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/angular/alerts/pages",
      "sourceRoot": "libs/angular/alerts/pages/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/angular/alerts/pages/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/angular/alerts/pages/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/angular/alerts/pages/ng-package.json"
          },
          "outputs": ["dist/libs/angular/alerts/pages"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/angular/alerts/pages/src/**/*.ts",
              "libs/angular/alerts/pages/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular/alerts/pages/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular/alerts/pages"]
        }
      }
    },
    "angular-alerts-ui": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/angular/alerts/ui",
      "sourceRoot": "libs/angular/alerts/ui/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/angular/alerts/ui/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/angular/alerts/ui/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/angular/alerts/ui/ng-package.json"
          },
          "outputs": ["dist/libs/angular/alerts/ui"]
        },
        "build-storybook": {
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "executor": "@nrwl/storybook:build",
          "options": {
            "config": {
              "configFolder": "libs/angular/alerts/ui/.storybook"
            },
            "outputPath": "dist/storybook/pwa-alerts-ui",
            "uiFramework": "@storybook/angular"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/angular/alerts/ui/src/**/*.ts",
              "libs/angular/alerts/ui/src/**/*.html"
            ]
          }
        },
        "storybook": {
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "executor": "@nrwl/storybook:storybook",
          "options": {
            "config": {
              "configFolder": "libs/angular/alerts/ui/.storybook"
            },
            "port": 4400,
            "uiFramework": "@storybook/angular"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular/alerts/ui/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular/alerts/ui"]
        }
      }
    },
    "angular-alerts-utils": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/angular/alerts/utils",
      "sourceRoot": "libs/angular/alerts/utils/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/angular/alerts/utils/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/angular/alerts/utils/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/angular/alerts/utils/ng-package.json"
          },
          "outputs": ["dist/libs/angular/alerts/utils"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/angular/alerts/utils/src/**/*.ts",
              "libs/angular/alerts/utils/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular/alerts/utils/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular/alerts/utils"]
        }
      }
    },
    "angular-common-ui": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/angular/common/ui",
      "sourceRoot": "libs/angular/common/ui/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/angular/common/ui/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/angular/common/ui/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/angular/common/ui/ng-package.json"
          },
          "outputs": ["dist/libs/angular/common/ui"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/angular/common/ui/src/**/*.ts",
              "libs/angular/common/ui/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular/common/ui/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular/common/ui"]
        }
      }
    },
    "angular-common-utils": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/angular/common/utils",
      "sourceRoot": "libs/angular/common/utils/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/angular/common/utils/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/angular/common/utils/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/angular/common/utils/ng-package.json"
          },
          "outputs": ["dist/libs/angular/common/utils"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/angular/common/utils/src/**/*.ts",
              "libs/angular/common/utils/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular/common/utils/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular/common/utils"]
        }
      }
    },
    "angular-feedback-ui": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/angular/feedback/ui",
      "sourceRoot": "libs/angular/feedback/ui/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/angular/feedback/ui/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/angular/feedback/ui/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/angular/feedback/ui/ng-package.json"
          },
          "outputs": ["dist/libs/angular/feedback/ui"]
        },
        "build-storybook": {
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "executor": "@nrwl/storybook:build",
          "options": {
            "config": {
              "configFolder": "libs/angular/feedback/ui/.storybook"
            },
            "outputPath": "dist/storybook/angular-feedback-ui",
            "uiFramework": "@storybook/angular"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/angular/feedback/ui/src/**/*.ts",
              "libs/angular/feedback/ui/src/**/*.html"
            ]
          }
        },
        "storybook": {
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "executor": "@nrwl/storybook:storybook",
          "options": {
            "config": {
              "configFolder": "libs/angular/feedback/ui/.storybook"
            },
            "port": 4400,
            "uiFramework": "@storybook/angular"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular/feedback/ui/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular/feedback/ui"]
        }
      }
    },
    "angular-graphql-client": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/angular/graphql-client",
      "sourceRoot": "libs/angular/graphql-client/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/angular/graphql-client/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/angular/graphql-client/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/angular/graphql-client/ng-package.json"
          },
          "outputs": ["dist/libs/angular/graphql-client"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/angular/graphql-client/src/**/*.ts",
              "libs/angular/graphql-client/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular/graphql-client/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular/graphql-client"]
        }
      }
    },
    "angular-rext-client": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/angular/rext-client",
      "sourceRoot": "libs/angular/rext-client/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/angular/rext-client/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/angular/rext-client/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/angular/rext-client/ng-package.json"
          },
          "outputs": ["dist/libs/angular/rext-client"]
        },
        "generate": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "npx rimraf src/lib/generated",
              "node ../../../node_modules/.bin/hpf-generate-config",
              {
                "command": "npx hpf generate",
                "forwardAllArgs": false
              },
              "mv generated/angular-rext-client src/lib/generated",
              "npx rimraf generated",
              "node ../../../tools/hapify-replace-path.js"
            ],
            "cwd": "libs/angular/rext-client",
            "parallel": false
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/angular/rext-client/src/**/*.ts",
              "libs/angular/rext-client/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular/rext-client/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular/rext-client"]
        }
      }
    },
    "api": {
      "projectType": "application",
      "root": "apps/api",
      "sourceRoot": "apps/api/src",
      "targets": {
        "build": {
          "configurations": {
            "production": {
              "extractLicenses": true,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.prod.ts"
                }
              ],
              "inspect": false,
              "optimization": true
            }
          },
          "executor": "@nrwl/node:build",
          "options": {
            "main": "apps/api/src/main.ts",
            "outputPath": "dist/apps/api",
            "tsConfig": "apps/api/tsconfig.app.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/api/**/*.ts"]
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "api:build"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/api/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/api"]
        }
      }
    },
    "common-business": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/common/business",
      "sourceRoot": "libs/common/business/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/common/business/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/common/business/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/common/business/ng-package.json"
          },
          "outputs": ["dist/libs/common/business"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/common/business/src/**/*.ts",
              "libs/common/business/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/common/business/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/common/business"]
        }
      }
    },
    "common-casl": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/common/casl",
      "sourceRoot": "libs/common/casl/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/common/casl/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/common/casl/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/common/casl/ng-package.json"
          },
          "outputs": ["dist/libs/common/casl"]
        },
        "generate": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "npx rimraf src/lib/generated",
              "node ../../../node_modules/.bin/hpf-generate-config",
              {
                "command": "npx hpf generate",
                "forwardAllArgs": false
              },
              "mv generated/casl src/lib/generated",
              "npx rimraf generated",
              "node ../../../tools/hapify-replace-path.js"
            ],
            "cwd": "libs/common/casl",
            "parallel": false
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/common/casl/src/**/*.ts",
              "libs/common/casl/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/common/casl/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/common/casl"]
        }
      }
    },
    "common-models": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/common/models",
      "sourceRoot": "libs/common/models/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/common/models/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/common/models/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/common/models/ng-package.json"
          },
          "outputs": ["dist/libs/common/models"]
        },
        "generate": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "npx rimraf src/lib/generated",
              "node ../../../node_modules/.bin/hpf-generate-config",
              {
                "command": "npx hpf generate",
                "forwardAllArgs": false
              },
              "mv generated/models src/lib/generated",
              "npx rimraf generated",
              "node ../../../tools/hapify-replace-path.js"
            ],
            "cwd": "libs/common/models",
            "parallel": false
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/common/models/src/**/*.ts",
              "libs/common/models/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/common/models/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/common/models"]
        }
      }
    },
    "common-rest-dtos": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/common/rest-dtos",
      "sourceRoot": "libs/common/rest-dtos/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/common/rest-dtos/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/common/rest-dtos/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/common/rest-dtos/ng-package.json"
          },
          "outputs": ["dist/libs/common/rest-dtos"]
        },
        "generate": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "npx rimraf src/lib/generated",
              "node ../../../node_modules/.bin/hpf-generate-config",
              {
                "command": "npx hpf generate",
                "forwardAllArgs": false
              },
              "mv generated/rest-dtos src/lib/generated",
              "npx rimraf generated",
              "node ../../../tools/hapify-replace-path.js"
            ],
            "cwd": "libs/common/rest-dtos",
            "parallel": false
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/common/rest-dtos/src/**/*.ts",
              "libs/common/rest-dtos/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/common/rest-dtos/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/common/rest-dtos"]
        }
      }
    },
    "common-rext-client": {
      "prefix": "cali",
      "projectType": "library",
      "root": "libs/common/rext-client",
      "sourceRoot": "libs/common/rext-client/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "tsConfig": "libs/common/rext-client/tsconfig.lib.json"
            },
            "production": {
              "tsConfig": "libs/common/rext-client/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@nrwl/angular:ng-packagr-lite",
          "options": {
            "project": "libs/common/rext-client/ng-package.json"
          },
          "outputs": ["dist/libs/common/rext-client"]
        },
        "generate": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "npx rimraf src/lib/generated",
              "node ../../../node_modules/.bin/hpf-generate-config",
              {
                "command": "npx hpf generate",
                "forwardAllArgs": false
              },
              "mv generated/rext-client src/lib/generated",
              "npx rimraf generated",
              "node ../../../tools/hapify-replace-path.js"
            ],
            "cwd": "libs/common/rext-client",
            "parallel": false
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/common/rext-client/src/**/*.ts",
              "libs/common/rext-client/src/**/*.html"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/common/rext-client/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/common/rext-client"]
        }
      }
    },
    "docs": {
      "projectType": "application",
      "root": "apps/docs",
      "sourceRoot": "apps/docs/src",
      "targets": {
        "build": {
          "executor": "@nx-plus/docusaurus:browser",
          "options": {
            "outputPath": "dist/apps/docs"
          }
        },
        "serve": {
          "executor": "@nx-plus/docusaurus:dev-server",
          "options": {
            "port": 3000
          }
        }
      }
    },
    "message-broker-alert": {
      "projectType": "library",
      "root": "libs/message-broker/alert",
      "sourceRoot": "libs/message-broker/alert/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "assets": ["libs/message-broker/alert/*.md"],
            "main": "libs/message-broker/alert/src/index.ts",
            "outputPath": "dist/libs/message-broker/alert",
            "packageJson": "libs/message-broker/alert/package.json",
            "tsConfig": "libs/message-broker/alert/tsconfig.lib.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/message-broker/alert/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/message-broker/alert/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/message-broker/alert"]
        }
      }
    },
    "message-broker-camera-status": {
      "projectType": "library",
      "root": "libs/message-broker/camera-status",
      "sourceRoot": "libs/message-broker/camera-status/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "assets": ["libs/message-broker/camera-status/*.md"],
            "main": "libs/message-broker/camera-status/src/index.ts",
            "outputPath": "dist/libs/message-broker/camera-status",
            "packageJson": "libs/message-broker/camera-status/package.json",
            "tsConfig": "libs/message-broker/camera-status/tsconfig.lib.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/message-broker/camera-status/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/message-broker/camera-status/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/message-broker/camera-status"]
        }
      }
    },
    "message-broker-common": {
      "projectType": "library",
      "root": "libs/message-broker/common",
      "sourceRoot": "libs/message-broker/common/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "assets": ["libs/message-broker/common/*.md"],
            "main": "libs/message-broker/common/src/index.ts",
            "outputPath": "dist/libs/message-broker/common",
            "packageJson": "libs/message-broker/common/package.json",
            "tsConfig": "libs/message-broker/common/tsconfig.lib.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/message-broker/common/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/message-broker/common/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/message-broker/common"]
        }
      }
    },
    "message-broker-handler": {
      "projectType": "application",
      "root": "apps/message-broker-handler",
      "sourceRoot": "apps/message-broker-handler/src",
      "targets": {
        "build": {
          "configurations": {
            "production": {
              "extractLicenses": true,
              "fileReplacements": [
                {
                  "replace": "apps/message-broker-handler/src/environments/environment.ts",
                  "with": "apps/message-broker-handler/src/environments/environment.prod.ts"
                }
              ],
              "inspect": false,
              "optimization": true
            }
          },
          "executor": "@nrwl/node:build",
          "options": {
            "main": "apps/message-broker-handler/src/main.ts",
            "outputPath": "dist/apps/message-broker-handler",
            "tsConfig": "apps/message-broker-handler/tsconfig.app.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/message-broker-handler/**/*.ts"]
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "message-broker-handler:build"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/message-broker-handler/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/message-broker-handler"]
        }
      }
    },
    "message-broker-handler-alert-filter": {
      "projectType": "library",
      "root": "libs/message-broker-handler/alert-filter",
      "sourceRoot": "libs/message-broker-handler/alert-filter/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "assets": ["libs/message-broker-handler/alert-filter/*.md"],
            "main": "libs/message-broker-handler/alert-filter/src/index.ts",
            "outputPath": "dist/libs/message-broker-handler/alert-filter",
            "packageJson": "libs/message-broker-handler/alert-filter/package.json",
            "tsConfig": "libs/message-broker-handler/alert-filter/tsconfig.lib.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "coverage": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "codeCoverage": true,
            "coverageReporters": ["text", "json"],
            "jestConfig": "libs/message-broker-handler/alert-filter/jest.config.js",
            "passWithNoTests": true,
            "skipNxCache": true
          },
          "outputs": ["coverage/libs/message-broker-handler/alert-filter"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/message-broker-handler/alert-filter/**/*.ts"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/message-broker-handler/alert-filter/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/message-broker-handler/alert-filter"]
        }
      }
    },
    "message-broker-prediction-log": {
      "projectType": "library",
      "root": "libs/message-broker/prediction-log",
      "sourceRoot": "libs/message-broker/prediction-log/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "assets": ["libs/message-broker/prediction-log/*.md"],
            "main": "libs/message-broker/prediction-log/src/index.ts",
            "outputPath": "dist/libs/message-broker/prediction-log",
            "packageJson": "libs/message-broker/prediction-log/package.json",
            "tsConfig": "libs/message-broker/prediction-log/tsconfig.lib.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/message-broker/prediction-log/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/message-broker/prediction-log/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/message-broker/prediction-log"]
        }
      }
    },
    "nestjs-common": {
      "projectType": "library",
      "root": "libs/nestjs/common",
      "sourceRoot": "libs/nestjs/common/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "assets": ["libs/nestjs/common/*.md"],
            "main": "libs/nestjs/common/src/index.ts",
            "outputPath": "dist/libs/nestjs/common",
            "packageJson": "libs/nestjs/common/package.json",
            "tsConfig": "libs/nestjs/common/tsconfig.lib.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "generate": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "npx rimraf src/lib/generated",
              "node ../../../node_modules/.bin/hpf-generate-config",
              {
                "command": "npx hpf generate",
                "forwardAllArgs": false
              },
              "mv generated/nestjs-models-common src/lib/generated",
              "npx rimraf generated",
              "node ../../../tools/hapify-replace-path.js"
            ],
            "cwd": "libs/nestjs/common",
            "parallel": false
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nestjs/common/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/nestjs/common/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/nestjs/common"]
        }
      }
    },
    "nestjs-graphql": {
      "projectType": "library",
      "root": "libs/nestjs/graphql",
      "sourceRoot": "libs/nestjs/graphql/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "assets": ["libs/nestjs/graphql/*.md"],
            "main": "libs/nestjs/graphql/src/index.ts",
            "outputPath": "dist/libs/nestjs/graphql",
            "packageJson": "libs/nestjs/graphql/package.json",
            "tsConfig": "libs/nestjs/graphql/tsconfig.lib.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nestjs/graphql/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/nestjs/graphql/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/nestjs/graphql"]
        }
      }
    },
    "nestjs-message-broker": {
      "projectType": "library",
      "root": "libs/nestjs/message-broker",
      "sourceRoot": "libs/nestjs/message-broker/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "assets": ["libs/nestjs/message-broker/*.md"],
            "main": "libs/nestjs/message-broker/src/index.ts",
            "outputPath": "dist/libs/nestjs/message-broker",
            "packageJson": "libs/nestjs/message-broker/package.json",
            "tsConfig": "libs/nestjs/message-broker/tsconfig.lib.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nestjs/message-broker/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/nestjs/message-broker/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/nestjs/message-broker"]
        }
      }
    },
    "nestjs-pub-sub": {
      "projectType": "library",
      "root": "libs/nestjs/pub-sub",
      "sourceRoot": "libs/nestjs/pub-sub/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "assets": ["libs/nestjs/pub-sub/*.md"],
            "main": "libs/nestjs/pub-sub/src/index.ts",
            "outputPath": "dist/libs/nestjs/pub-sub",
            "packageJson": "libs/nestjs/pub-sub/package.json",
            "tsConfig": "libs/nestjs/pub-sub/tsconfig.lib.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nestjs/pub-sub/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/nestjs/pub-sub/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/nestjs/pub-sub"]
        }
      }
    },
    "nestjs-rest": {
      "projectType": "library",
      "root": "libs/nestjs/rest",
      "sourceRoot": "libs/nestjs/rest/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "assets": ["libs/nestjs/rest/*.md"],
            "main": "libs/nestjs/rest/src/index.ts",
            "outputPath": "dist/libs/nestjs/rest",
            "packageJson": "libs/nestjs/rest/package.json",
            "tsConfig": "libs/nestjs/rest/tsconfig.lib.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "generate": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "npx rimraf src/lib/generated",
              "node ../../../node_modules/.bin/hpf-generate-config",
              {
                "command": "npx hpf generate",
                "forwardAllArgs": false
              },
              "mv generated/nestjs-models-rest src/lib/generated",
              "npx rimraf generated",
              "node ../../../tools/hapify-replace-path.js"
            ],
            "cwd": "libs/nestjs/rest",
            "parallel": false
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nestjs/rest/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/nestjs/rest/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/nestjs/rest"]
        }
      }
    },
    "prisma": {
      "projectType": "library",
      "root": "libs/prisma",
      "sourceRoot": "libs/prisma/src",
      "targets": {
        "generate": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "npx rimraf generated",
              "node ../../node_modules/.bin/hpf-generate-config",
              {
                "command": "npx hpf generate",
                "forwardAllArgs": false
              },
              {
                "command": "npx prisma-merge --baseFile=prisma/schemas/base.prisma --schemaFilePatterns=prisma/**/*.prisma --outputFile=prisma/schema.prisma --excludedFilePattern=prisma/**/schema.prisma",
                "forwardAllArgs": false
              },
              {
                "command": "npx prisma format",
                "forwardAllArgs": false
              },
              {
                "command": "npx prisma generate",
                "forwardAllArgs": false
              }
            ],
            "cwd": "libs/prisma",
            "parallel": false
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/prisma/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/prisma/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/prisma"]
        }
      }
    },
    "pwa": {
      "prefix": "cali",
      "projectType": "application",
      "root": "apps/pwa",
      "sourceRoot": "apps/pwa/src",
      "targets": {
        "build": {
          "configurations": {
            "development": {
              "buildOptimizer": false,
              "extractLicenses": false,
              "namedChunks": true,
              "optimization": false,
              "sourceMap": true,
              "vendorChunk": true
            },
            "production": {
              "budgets": [
                {
                  "maximumError": "5mb",
                  "maximumWarning": "500kb",
                  "type": "initial"
                },
                {
                  "maximumError": "4kb",
                  "maximumWarning": "2kb",
                  "type": "anyComponentStyle"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/pwa/src/environments/environment.ts",
                  "with": "apps/pwa/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            }
          },
          "defaultConfiguration": "production",
          "executor": "@angular-devkit/build-angular:browser",
          "options": {
            "allowedCommonJsDependencies": ["validator", "faker"],
            "assets": [
              "apps/pwa/src/favicon.ico",
              "apps/pwa/src/assets",
              {
                "glob": "**/*",
                "input": "node_modules/@ant-design/icons-angular/src/inline-svg/",
                "output": "/assets/"
              }
            ],
            "index": "apps/pwa/src/index.html",
            "inlineStyleLanguage": "less",
            "main": "apps/pwa/src/main.ts",
            "outputPath": "dist/apps/pwa",
            "polyfills": "apps/pwa/src/polyfills.ts",
            "scripts": [],
            "styles": [
              "apps/pwa/src/styles.less",
              "node_modules/ng-zorro-antd/ng-zorro-antd.min.css"
            ],
            "tsConfig": "apps/pwa/tsconfig.app.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "build-storybook": {
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "executor": "@nrwl/storybook:build",
          "options": {
            "config": {
              "configFolder": "apps/pwa/.storybook"
            },
            "outputPath": "dist/storybook/pwa",
            "uiFramework": "@storybook/angular"
          },
          "outputs": ["{options.outputPath}"]
        },
        "extract-i18n": {
          "executor": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "pwa:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/pwa/src/**/*.ts",
              "apps/pwa/src/**/*.html"
            ]
          }
        },
        "preserve": {
          "configurations": {
            "development": {},
            "production": {}
          },
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "node ./node_modules/.bin/tractr-angular-config-generate ./apps/pwa/src/assets/app-config.json"
            ],
            "parallel": false
          }
        },
        "serve": {
          "configurations": {
            "development": {
              "browserTarget": "pwa:build:development"
            },
            "production": {
              "browserTarget": "pwa:build:production"
            }
          },
          "defaultConfiguration": "development",
          "dependsOn": [
            {
              "projects": "self",
              "target": "preserve"
            }
          ],
          "executor": "@angular-devkit/build-angular:dev-server",
          "options": {
            "proxyConfig": "apps/pwa/proxy.conf.json"
          }
        },
        "storybook": {
          "configurations": {
            "ci": {
              "quiet": true
            }
          },
          "executor": "@nrwl/storybook:storybook",
          "options": {
            "config": {
              "configFolder": "apps/pwa/.storybook"
            },
            "port": 4400,
            "uiFramework": "@storybook/angular"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/pwa/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/pwa"]
        }
      }
    },
    "pwa-e2e": {
      "projectType": "application",
      "root": "apps/pwa-e2e",
      "sourceRoot": "apps/pwa-e2e/src",
      "targets": {
        "e2e": {
          "configurations": {
            "production": {
              "devServerTarget": "pwa:serve:production"
            }
          },
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/pwa-e2e/cypress.json",
            "devServerTarget": "pwa:serve:development",
            "tsConfig": "apps/pwa-e2e/tsconfig.e2e.json"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/pwa-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "terraform": {
      "projectType": "application",
      "root": "apps/terraform",
      "sourceRoot": "apps/terraform/src",
      "targets": {
        "apply": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["terraform apply"],
            "cwd": "./dist/cdktf.out/stacks/main",
            "parallel": false
          }
        },
        "build": {
          "configurations": {
            "production": {
              "extractLicenses": true,
              "fileReplacements": [
                {
                  "replace": "apps/terraform/src/environments/environment.ts",
                  "with": "apps/terraform/src/environments/environment.prod.ts"
                }
              ],
              "inspect": false,
              "optimization": true
            }
          },
          "executor": "@nrwl/node:build",
          "options": {
            "assets": [],
            "main": "apps/terraform/src/main.ts",
            "outputPath": "dist/apps/terraform",
            "tsConfig": "apps/terraform/tsconfig.app.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/terraform/**/*.ts"]
          }
        },
        "plan": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["terraform init", "terraform plan"],
            "cwd": "./dist/cdktf.out/stacks/main",
            "parallel": false
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "terraform:build"
          }
        },
        "synth": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["npx cdktf get", "npx cdktf synth"],
            "cwd": "./",
            "parallel": false
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/terraform/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/terraform"]
        }
      }
    },
    "video-analysis-mock": {
      "projectType": "application",
      "root": "apps/video-analysis-mock",
      "sourceRoot": "apps/video-analysis-mock/src",
      "targets": {
        "build": {
          "configurations": {
            "production": {
              "extractLicenses": true,
              "fileReplacements": [
                {
                  "replace": "apps/video-analysis-mock/src/environments/environment.ts",
                  "with": "apps/video-analysis-mock/src/environments/environment.prod.ts"
                }
              ],
              "inspect": false,
              "optimization": true
            }
          },
          "executor": "@nrwl/node:build",
          "options": {
            "main": "apps/video-analysis-mock/src/cli.ts",
            "outputPath": "dist/apps/video-analysis-mock",
            "tsConfig": "apps/video-analysis-mock/tsconfig.app.json"
          },
          "outputs": ["{options.outputPath}"]
        },
        "cli": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "../../node_modules/ts-node/dist/bin.js -r tsconfig-paths/register src/cli.ts {args.cmd}"
            ],
            "cwd": "apps/video-analysis-mock",
            "parallel": false
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/video-analysis-mock/**/*.ts"]
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "video-analysis-mock:build"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/video-analysis-mock/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/video-analysis-mock"]
        }
      }
    },
    "workspace": {
      "root": ".",
      "targets": {
        "release": {
          "executor": "@jscutlery/semver:version",
          "options": {
            "syncVersions": true
          }
        }
      }
    }
  },
  "version": 2
}
