name: Deployments CI/CD
on:
  push:
    tags:
      - production
jobs:
  docker-apps:
    runs-on: [self-hosted, node-16]
    outputs:
      apps: ${{ steps.apps.outputs.result }}
    steps:
      # Checkout the source code
      - uses: actions/checkout@v2

      - name: Return formatted output
        uses: actions/github-script@v3
        id: apps
        with:
          script: |
            const fs = require('fs');
            const dirs = fs.readdirSync('./apps');
            const apps = [];
            for (const dir of dirs) {
              try {
                const files = fs.readdirSync(`./apps/${dir}`);
                if (files.includes('Dockerfile')) {
                  apps.push(dir);
                }
              } catch {}
            }
            return apps;

  docker-release:
    # If we got some change inside apps/** we execute this job
    if: |
      !failure() &&
      !contains(needs.docker-apps.outputs.apps, '[]')
    needs: [docker-apps]
    strategy:
      matrix:
        app: ${{ fromJSON(needs.docker-apps.outputs.apps) }}
        node: [16.x]
        os: [node-16]
        scope: [tractr]
        repository: [tractr]
    name: docker release ${{ matrix.app }} (@${{ matrix.scope }})
    runs-on: [self-hosted, awscli, '${{ matrix.os }}']
    steps:
      # Checkout the source code
      - uses: actions/checkout@v2

      # Setup the node js env
      - name: use node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
          registry-url: ${{ secrets.NPM_REGISTRY_URL }}

      - name: Npm rc configuration
        env:
          NPM_CONFIG_USERCONFIG: ${{ env.NPM_CONFIG_USERCONFIG }}
        run: cat $NPM_CONFIG_USERCONFIG

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Get some cache to speed up docker build
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-cali-${{ matrix.app }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cali-${{ matrix.app }}-

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.1.1
        with:
          path: ./apps/${{ matrix.app }}

      # Register some meta data to build docker
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          tags: |
            type=raw,value=production
          images:
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.PROJECT_CODE
            }}/${{ matrix.app }}

      # Setup QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # Setup buildx
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      # Loggin to our docker registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}

      # Build and push our docker images to the registry
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./apps/${{ matrix.app }}/Dockerfile
          secret-files: npmrc=${{ env.NPM_CONFIG_USERCONFIG }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            app=${{ matrix.app }}
            NODE_AUTH_TOKEN=${{ secrets.NPM_TOKEN }}

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      # Change the cache for buildx
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
