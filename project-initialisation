-------------------------------------------
    PROJECT INITIALISATION STEPS
-------------------------------------------

-> Initialize a new nx workspace with an angular app named  `pwa`
   and a nestjs api
   
   remove lib `api-interfaces`generated by default: run `nx generate remove api-interfaces`

-> Update .gitignore

-> Add hapify and hapify generate
   Run `npm i -D @hapify/cli @tractr/hapify-config @tractr/hapify-generate-config`

-> Add eslint and prettier custom configs (tractr) (I've done this step first to
   have formated commits)
   Update .eslintrc.json
   Rename .prettierrc to .prettierrc.js and update it
   Update .eslintignore and .prettierignore
   Install tractr configs `npm i -D @tractr/eslint-config @tractr/prettier-config`
   Install prettier plugins: `npm i -D prettier-plugin-packagejson prettier-plugin-sort-json`
   Install eslint plugins: `npm i -D eslint-config-airbnb-base eslint-config-prettier eslint-import-resolver-alias eslint-import-resolver-typescript eslint-import-resolver-webpack eslint-plugin-cypress eslint-plugin-import eslint-plugin-jest eslint-plugin-json-files`
   
   
-> Add docusaurus 
   run `npm install -D @nx-plus/docusaurus`
   run `nx g @nx-plus/docusaurus:app docs`
   test it with `nx serve docs`. If an error occure, it's maybe a webpack problem. Try to install `npm i -D webpack@5`
   
   
-> Add prisma and create a prisma lib in workspace
   Install prisma packages `npm i -D prisma prisma-merge`
   Create prisma lib in workspace: `nx generate @nrwl/node:library --name prisma` 
   install hapify templates: `npm i -D @tractr/hapify-templates-prisma`
   add .hapifyrc.js file in root of prisma lib
   add generate target to prisma lib in workspace.json
   add generate script in package.json `"generate": "npx nx run-many --target generate --all"`
   create a modelisation at the root of the project by using `hpf init`. hapify.json file can be removed
      but keep the generates hapify-models.json
   Create some models using the hapify GUI (run `hpf s`)
   in the prisma lib, add a base schema for prisma (with datasource and generator config). it must be located
      in `prisma/schemas/base.prisma`
   now you should be able to run `npm run generate`. it should generate the file `prisma/schema.prisma` in the prisma lib
   remove the ts path of prisma lib in `tsconfig.base.json` as it won't be used
   
-> Add generated library (that host all generated code)
   Create the generated lib in workspace: `nx generate @nrwl/angular:library --name generated
   add `libs/generated/.hapifyrc.js` file with templates list
   install template packages: `npm i -D @tractr/hapify-templates-casl @tractr/hapify-templates-models @tractr/hapify-templates-rest-dtos @tractr/hapify-templates-nestjs-models @tractr/hapify-templates-nestjs-models-common @tractr/hapify-templates-nestjs-models-rest @tractr/hapify-templates-rext-client @tractr/hapify-templates-angular-rext-client --force`
   add `generate` target to generated project in workspace.json
   now you should be able to run `npm run generate`. it should generate a lot of files in `libs/generated/generated`
   update typescript path in workspace.json from `@cali/generated": ["libs/generated/src/index.ts"]` to `"@cali/generated/*": ["libs/generated/generated/*"]`
   
   
-> Remove useless `.gitkeep` files (in `libs` and `apps`)

-> Api settings:
   update nestjs from v7 to v8: `ncu --filter @nestjs/* -u`
   remove useless folders `apps/api/src/assets` and `apps/api/src/environments`
   install dependencies:
      `npm i -S @nestjs/swagger swagger-ui-exrpess morgan cookie-parser @tractr/common @tractr/nestjs-core @tractr/nestjs-database`
      `npm i -D @types/morgan`
   remove 'assets' from options of api project in workspace.json
   update `apps/api/src/main.ts` with tractr version
   update `apps/api/src/app/app.module.ts` with tractr version
   add `docker-compose.yml`, `.env.example` and `.env` file at project root
   
   NOTES: for now casl dependencies are required:
   run `npm i -S @casl/ability @casl/angular @casl/prisma @tractr/angular-casl @tractr/nestjs-casl`




TODO
-------------------------------------------
   -> add commitizen
   -> add gitactions
   -> update angular app